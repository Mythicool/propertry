{"ast":null,"code":"var _jsxFileName = \"O:\\\\VSCODE PROJECTS\\\\tryagain\\\\src\\\\components\\\\Animation\\\\ParallaxElement.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { motion, useTransform, useViewportScroll } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParallaxElement = ({\n  children,\n  speed = 0.5,\n  className = '',\n  direction = 'up',\n  ...props\n}) => {\n  _s();\n  const {\n    scrollY\n  } = useViewportScroll();\n\n  // Create transforms based on direction and speed\n  const yTransform = useTransform(scrollY, [0, 1000], [0, direction === 'up' ? -speed * 100 : speed * 100]);\n  const xTransform = useTransform(scrollY, [0, 1000], [0, direction === 'left' ? -speed * 100 : speed * 100]);\n  const getStyle = () => {\n    if (direction === 'left' || direction === 'right') {\n      return {\n        x: xTransform\n      };\n    }\n    return {\n      y: yTransform\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: className,\n    style: getStyle(),\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ParallaxElement, \"3aUP11g7ESRaXcIQTF9F5a9WJkg=\", false, function () {\n  return [useViewportScroll, useTransform, useTransform];\n});\n_c = ParallaxElement;\nexport default ParallaxElement;\nvar _c;\n$RefreshReg$(_c, \"ParallaxElement\");","map":{"version":3,"names":["React","motion","useTransform","useViewportScroll","jsxDEV","_jsxDEV","ParallaxElement","children","speed","className","direction","props","_s","scrollY","yTransform","xTransform","getStyle","x","y","div","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["O:/VSCODE PROJECTS/tryagain/src/components/Animation/ParallaxElement.js"],"sourcesContent":["import React from 'react';\nimport { motion, useTransform, useViewportScroll } from 'framer-motion';\n\nconst ParallaxElement = ({ \n  children, \n  speed = 0.5, \n  className = '',\n  direction = 'up',\n  ...props \n}) => {\n  const { scrollY } = useViewportScroll();\n  \n  // Create transforms based on direction and speed\n  const yTransform = useTransform(scrollY, [0, 1000], [0, direction === 'up' ? -speed * 100 : speed * 100]);\n  const xTransform = useTransform(scrollY, [0, 1000], [0, direction === 'left' ? -speed * 100 : speed * 100]);\n\n  const getStyle = () => {\n    if (direction === 'left' || direction === 'right') {\n      return { x: xTransform };\n    }\n    return { y: yTransform };\n  };\n\n  return (\n    <motion.div\n      className={className}\n      style={getStyle()}\n      {...props}\n    >\n      {children}\n    </motion.div>\n  );\n};\n\nexport default ParallaxElement;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,YAAY,EAAEC,iBAAiB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,eAAe,GAAGA,CAAC;EACvBC,QAAQ;EACRC,KAAK,GAAG,GAAG;EACXC,SAAS,GAAG,EAAE;EACdC,SAAS,GAAG,IAAI;EAChB,GAAGC;AACL,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM;IAAEC;EAAQ,CAAC,GAAGV,iBAAiB,CAAC,CAAC;;EAEvC;EACA,MAAMW,UAAU,GAAGZ,YAAY,CAACW,OAAO,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAEH,SAAS,KAAK,IAAI,GAAG,CAACF,KAAK,GAAG,GAAG,GAAGA,KAAK,GAAG,GAAG,CAAC,CAAC;EACzG,MAAMO,UAAU,GAAGb,YAAY,CAACW,OAAO,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAEH,SAAS,KAAK,MAAM,GAAG,CAACF,KAAK,GAAG,GAAG,GAAGA,KAAK,GAAG,GAAG,CAAC,CAAC;EAE3G,MAAMQ,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIN,SAAS,KAAK,MAAM,IAAIA,SAAS,KAAK,OAAO,EAAE;MACjD,OAAO;QAAEO,CAAC,EAAEF;MAAW,CAAC;IAC1B;IACA,OAAO;MAAEG,CAAC,EAAEJ;IAAW,CAAC;EAC1B,CAAC;EAED,oBACET,OAAA,CAACJ,MAAM,CAACkB,GAAG;IACTV,SAAS,EAAEA,SAAU;IACrBW,KAAK,EAAEJ,QAAQ,CAAC,CAAE;IAAA,GACdL,KAAK;IAAAJ,QAAA,EAERA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEjB,CAAC;AAACZ,EAAA,CA7BIN,eAAe;EAAA,QAOCH,iBAAiB,EAGlBD,YAAY,EACZA,YAAY;AAAA;AAAAuB,EAAA,GAX3BnB,eAAe;AA+BrB,eAAeA,eAAe;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}