// Paula Wilson Realty - SCSS Mixins
// Reusable mixins for consistent styling and advanced effects

@import 'variables';

// ===== RESPONSIVE BREAKPOINTS =====
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (min-width: $breakpoint-xs) { @content; }
  }
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  }
  @if $breakpoint == md {
    @media (min-width: $breakpoint-md) { @content; }
  }
  @if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  }
  @if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  }
  @if $breakpoint == 2xl {
    @media (min-width: $breakpoint-2xl) { @content; }
  }
}

// ===== GLASSMORPHISM EFFECTS =====
@mixin glassmorphism($opacity: 0.1, $blur: 20px, $border-opacity: 0.2) {
  background: rgba(255, 255, 255, $opacity);
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);
  border: 1px solid rgba(255, 255, 255, $border-opacity);
  box-shadow: $shadow-glass-md;
}

@mixin glassmorphism-dark($opacity: 0.1, $blur: 20px, $border-opacity: 0.1) {
  background: rgba(0, 0, 0, $opacity);
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);
  border: 1px solid rgba(255, 255, 255, $border-opacity);
  box-shadow: $shadow-glass-md;
}

// ===== GRADIENT BACKGROUNDS =====
@mixin gradient-bg($direction: 135deg, $color1: $primary-500, $color2: $primary-600) {
  background: linear-gradient($direction, $color1 0%, $color2 100%);
}

@mixin gradient-text($direction: 135deg, $color1: $primary-500, $color2: $primary-600) {
  background: linear-gradient($direction, $color1 0%, $color2 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

// ===== ANIMATIONS =====
@mixin fade-in($duration: 0.6s, $delay: 0s) {
  opacity: 0;
  animation: fadeIn $duration ease-out $delay forwards;
}

@mixin slide-up($duration: 0.6s, $delay: 0s, $distance: 30px) {
  opacity: 0;
  transform: translateY($distance);
  animation: slideUp $duration ease-out $delay forwards;
}

@mixin scale-in($duration: 0.6s, $delay: 0s) {
  opacity: 0;
  transform: scale(0.9);
  animation: scaleIn $duration ease-out $delay forwards;
}

@mixin float($duration: 6s, $distance: 20px) {
  animation: float $duration ease-in-out infinite;
  
  @keyframes float {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-$distance);
    }
  }
}

// ===== HOVER EFFECTS =====
@mixin hover-lift($lift: 8px, $scale: 1.02, $duration: 0.3s) {
  transition: all $duration $ease-out-cubic;
  
  &:hover {
    transform: translateY(-$lift) scale($scale);
    box-shadow: $shadow-xl;
  }
}

@mixin hover-glow($color: $primary-500, $intensity: 0.3) {
  transition: all 0.3s ease;
  
  &:hover {
    box-shadow: 0 0 30px rgba($color, $intensity);
  }
}

// ===== BUTTON STYLES =====
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: $space-2;
  padding: $space-3 $space-6;
  border: none;
  border-radius: $radius-xl;
  font-family: $font-primary;
  font-weight: $font-weight-semibold;
  font-size: $text-sm;
  line-height: $leading-none;
  text-decoration: none;
  cursor: pointer;
  transition: all $transition-base;
  position: relative;
  overflow: hidden;
  
  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba($primary-500, 0.3);
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }
}

@mixin button-primary {
  @include button-base;
  @include gradient-bg(135deg, $primary-500, $primary-600);
  color: white;
  box-shadow: $shadow-md;
  
  &:hover {
    @include gradient-bg(135deg, $primary-600, $primary-700);
    transform: translateY(-2px);
    box-shadow: $shadow-lg;
  }
  
  &:active {
    transform: translateY(0);
    box-shadow: $shadow-md;
  }
}

@mixin button-secondary {
  @include button-base;
  background: rgba(255, 255, 255, 0.9);
  color: $primary-600;
  border: 2px solid $primary-200;
  box-shadow: $shadow-sm;
  
  &:hover {
    background: $primary-50;
    border-color: $primary-300;
    transform: translateY(-2px);
    box-shadow: $shadow-md;
  }
}

@mixin button-ghost {
  @include button-base;
  background: transparent;
  color: $primary-600;
  border: 2px solid transparent;
  
  &:hover {
    background: rgba($primary-500, 0.1);
    border-color: rgba($primary-500, 0.2);
  }
}

// ===== CARD STYLES =====
@mixin card-base {
  background: rgba(255, 255, 255, 0.95);
  border-radius: $radius-3xl;
  border: 1px solid rgba(255, 255, 255, 0.8);
  box-shadow: $shadow-lg;
  backdrop-filter: $backdrop-blur-md;
  -webkit-backdrop-filter: $backdrop-blur-md;
  overflow: hidden;
  transition: all $transition-base;
}

@mixin card-hover {
  @include hover-lift(12px, 1.02);
  
  &:hover {
    border-color: rgba($primary-500, 0.3);
    box-shadow: $shadow-2xl, 0 0 40px rgba($primary-500, 0.1);
  }
}

// ===== TYPOGRAPHY =====
@mixin heading-display {
  font-family: $font-display;
  font-weight: $font-weight-bold;
  line-height: $leading-tight;
  letter-spacing: -0.025em;
}

@mixin heading-primary {
  font-family: $font-primary;
  font-weight: $font-weight-bold;
  line-height: $leading-tight;
  letter-spacing: -0.025em;
}

@mixin text-gradient($direction: 135deg, $color1: $primary-500, $color2: $secondary-500) {
  @include gradient-text($direction, $color1, $color2);
}

// ===== LAYOUT =====
@mixin container {
  width: 100%;
  max-width: 1280px;
  margin: 0 auto;
  padding: 0 $space-4;
  
  @include respond-to(sm) {
    padding: 0 $space-6;
  }
  
  @include respond-to(lg) {
    padding: 0 $space-8;
  }
}

@mixin section-padding {
  padding: $space-16 0;
  
  @include respond-to(md) {
    padding: $space-20 0;
  }
  
  @include respond-to(lg) {
    padding: $space-24 0;
  }
}

// ===== GRID SYSTEMS =====
@mixin grid-auto-fit($min-width: 300px, $gap: $space-6) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $gap;
}

@mixin grid-auto-fill($min-width: 300px, $gap: $space-6) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
  gap: $gap;
}

// ===== ACCESSIBILITY =====
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin focus-visible {
  &:focus-visible {
    outline: 2px solid $primary-500;
    outline-offset: 2px;
  }
}

// ===== UTILITY =====
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin aspect-ratio($width: 16, $height: 9) {
  aspect-ratio: #{$width} / #{$height};
  
  @supports not (aspect-ratio: 1) {
    position: relative;
    
    &::before {
      content: '';
      display: block;
      padding-top: percentage($height / $width);
    }
    
    > * {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  }
}
